% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vivid_functions.R
\name{clean_gene_names}
\alias{clean_gene_names}
\title{Clean Gene Names}
\usage{
clean_gene_names(genes, log_messages_rv = NULL, log_event = NULL)
}
\arguments{
\item{genes}{A vector of gene names to be cleaned}

\item{log_messages_rv}{Optional reactive value for storing log messages}

\item{log_event}{Optional logging function created by create_logger()}
}
\value{
A vector of cleaned, unique gene names with the following modifications:
  \itemize{
    \item Removed NA values
    \item Removed text after delimiters (;,|)
    \item Trimmed whitespace
    \item Converted to uppercase
    \item Removed special characters
    \item Removed duplicates
  }
}
\description{
Standardizes and cleans gene names by removing special characters, 
converting to uppercase, and ensuring uniqueness. This function handles common 
issues in gene name formatting such as multiple entries, special characters, 
and inconsistent spacing.
}
\details{
Clean and Standardize Gene Names

The function performs the following cleaning steps in order:
  1. Removes NA values
  2. Keeps only the first part of compound names (before ;,| or space)
  3. Removes leading and trailing whitespace
  4. Removes empty strings
  5. Converts to uppercase
  6. Removes all characters except letters and numbers
  7. Removes duplicates
}
\examples{
\dontrun{
# Basic usage without logging
genes <- c("Gene1", "gene1;alt", "GENE-2", NA, "Gene1", "gene_3")
cleaned <- clean_gene_names(genes)
print(cleaned)  # Returns: c("GENE1", "GENE2", "GENE3")

# Usage with logging in Shiny
server <- function(input, output, session) {
  log_messages <- reactiveVal("")
  logger <- create_logger(session)
  
  genes <- c("Gene1", "gene1;alt", "GENE-2", NA)
  cleaned <- clean_gene_names(genes, log_messages, logger)
}
}

}
\seealso{
\code{\link{create_logger}} for creating the logging function
}
