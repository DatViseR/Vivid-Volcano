% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vivid_functions.R
\name{check_and_unlog_pvalues}
\alias{check_and_unlog_pvalues}
\title{Check and Unlog P-values}
\usage{
check_and_unlog_pvalues(df, pvalue_col, log_messages_rv, log_event)
}
\arguments{
\item{df}{Data frame containing p-values}

\item{pvalue_col}{Character, name of the column containing p-values}

\item{log_messages_rv}{Reactive value for storing log messages}

\item{log_event}{Logging function created by create_logger()}
}
\value{
The input data frame with potentially transformed p-values if -log10 
transformation was detected and reversed. Original data frame is returned if no 
transformation was needed or possible.
}
\description{
Validates p-values in a data frame and attempts to reverse -log10 
transformation if detected. Performs comprehensive range checking and handles NA values.
}
\details{
Check and Unlog P-values


Validation Steps:
\enumerate{
  \item Checks for NA values
  \item Identifies values outside valid p-value range [0,1]
  \item Detects potential -log10 transformation
  \item Attempts to reverse -log10 transformation if detected
  \item Verifies successful transformation
}

Detection Criteria:
\itemize{
  \item Values between -50 and 50 suggest -log10 transformation
  \item Negative values or values > 1 indicate invalid p-values
  \item NA values are counted but preserved
}
}
\note{
- The function assumes -log10 transformation if values are in [-50, 50]
- Takes absolute values before unlogging to handle negative -log10 values
- Original column is overwritten if transformation is performed
- NA handling is passive (preserved without modification)
}
\section{Logging Messages}{

The function generates several types of log messages:
\describe{
  \item{PVALUE}{Basic process information}
  \item{WARNING}{Issues with data quality}
  \item{ERROR}{Critical problems with values}
  \item{SUCCESS}{Successful transformations}
  \item{VALIDATION}{Confirmation of valid values}
}
}

\section{Edge Cases}{

\itemize{
  \item NA values are preserved and counted
  \item Values outside [-50, 50] are considered invalid and not transformed
  \item Zero p-values are allowed but may indicate potential issues
  \item Extremely small p-values may result from unlogging large negative values
}
}

\examples{
\dontrun{
# In Shiny server context
server <- function(input, output, session) {
  log_messages <- reactiveVal("")
  logger <- create_logger(session)
  
  # Example with regular p-values
  df1 <- data.frame(
    pvalue = c(0.01, 0.05, 0.001, NA)
  )
  result1 <- check_and_unlog_pvalues(
    df = df1,
    pvalue_col = "pvalue",
    log_messages = log_messages,
    log_event = logger
  )
  
  # Example with -log10 transformed p-values
  df2 <- data.frame(
    pvalue = c(2, 1.30, 3, NA)  # -log10(0.01), -log10(0.05), -log10(0.001)
  )
  result2 <- check_and_unlog_pvalues(
    df = df2,
    pvalue_col = "pvalue",
    log_messages = log_messages,
    log_event = logger
  )
}
}

}
\seealso{
\code{\link{create_logger}} for logging functionality
}
\author{
Tomasz StÄ™pkowski <dzdzstepel@gmail.com>
}
