% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vivid_functions.R
\name{build_gt_gene_lists}
\alias{build_gt_gene_lists}
\title{Build GO Category Gene Lists Table}
\usage{
build_gt_gene_lists(
  df,
  annotation_col,
  chosen_go,
  go_data,
  alpha,
  fold_col,
  color_highlight,
  log_messages_rv,
  log_event
)
}
\arguments{
\item{df}{Data frame containing differential expression analysis results}

\item{annotation_col}{Character, name of the column containing gene annotations}

\item{chosen_go}{Character vector of selected GO category names}

\item{go_data}{Data frame containing GO annotations with columns:
\itemize{
  \item name: GO category name
  \item id: GO identifier
  \item gene: Gene identifier
}}

\item{alpha}{Numeric, significance threshold for adjusted p-values}

\item{fold_col}{Character, name of the column containing fold change values}

\item{color_highlight}{Character vector of length 2:
\itemize{
  \item [1]: Color for down-regulated genes
  \item [2]: Color for up-regulated genes
}}

\item{log_messages_rv}{Reactive value for storing log messages}

\item{log_event}{Logging function created by create_logger()}
}
\value{
A GT table object with four columns:
  \itemize{
    \item GO Category: GO term name and ID
    \item All Genes: Complete gene list with visual formatting
    \item Downregulated Genes: List of down-regulated genes
    \item Upregulated Genes: List of up-regulated genes
  }
}
\description{
Creates a formatted GT (Grammar of Tables) table showing gene lists 
for selected GO categories, with color-coded display of up-regulated and 
down-regulated genes, and visual distinction between detected and non-detected genes.
}
\details{
Gene Classification:
\itemize{
  \item Detected genes: All genes present in the input data
  \item Regulated genes: Genes with adjusted p-value < alpha
  \item Up-regulated: Regulated genes with positive fold change
  \item Down-regulated: Regulated genes with negative fold change
}

Visual Formatting:
\itemize{
  \item Bold: Detected genes
  \item Color (up): Up-regulated genes
  \item Color (down): Down-regulated genes
  \item Plain: Non-detected genes
}
}
\note{
- Requires clean_gene_names() function for gene name standardization
- Uses HTML spans for color formatting in the All Genes column
- Displays "No genes found" messages when appropriate
- GO Category column combines term name and ID with newline
}
\section{Table Features}{

\itemize{
  \item Responsive width (100%)
  \item 12px base font size
  \item Bold column headers
  \item Top-aligned text in GO Category column
  \item Markdown formatting support for gene lists
  \item Color-coded regulation status
}
}

\examples{
\dontrun{
# In Shiny server context
server <- function(input, output, session) {
  log_messages <- reactiveVal("")
  logger <- create_logger(session)
  
  # Example data
  df <- data.frame(
    gene = c("BRCA1", "TP53", "PTEN"),
    log2FC = c(2.1, -1.5, 1.8),
    adjusted_pvalues = c(0.01, 0.03, 0.02)
  )
  
  go_data <- data.frame(
    name = c("DNA repair", "DNA repair", "cell cycle"),
    id = c("GO:0006281", "GO:0006281", "GO:0007049"),
    gene = c("BRCA1", "TP53", "PTEN")
  )
  
  # Create gene lists table
  gene_table <- build_gt_gene_lists(
    df = df,
    annotation_col = "gene",
    chosen_go = c("DNA repair", "cell cycle"),
    go_data = go_data,
    alpha = 0.05,
    fold_col = "log2FC",
    color_highlight = c("#FFE6E6", "#E6FFE6"),
    log_messages = log_messages,
    log_event = logger
  )
}
}

}
\seealso{
\code{\link{clean_gene_names}} for gene name preprocessing
\code{\link{create_logger}} for logging functionality
}
\author{
Tomasz StÄ™pkowski <dzdzstepel@gmail.com>
}
