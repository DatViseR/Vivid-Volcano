% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vivid_functions.R
\name{diagnose_and_clean_data}
\alias{diagnose_and_clean_data}
\title{Diagnose and Clean Numeric Data}
\usage{
diagnose_and_clean_data(df, log_messages_rv, log_event, log_structure)
}
\arguments{
\item{df}{Data frame to be diagnosed and cleaned}

\item{log_messages_rv}{Reactive value for storing log messages}

\item{log_event}{Logging function created by create_logger()}

\item{log_structure}{Structure logging function for data frame updates}
}
\value{
Clean data frame with:
  \itemize{
    \item Non-numeric values removed from numeric-like columns
    \item Extreme fold change values (|x| > 10) removed
    \item Columns coerced to appropriate numeric types
  }
}
\description{
Performs automated diagnosis and cleaning of data frames containing
omics data, focusing on numeric columns and fold change values. Provides 
interactive user feedback and logging of all modifications.
}
\details{
Diagnose and Clean Data for Omics Analysis


Cleaning Process:
\enumerate{
  \item Identifies numeric-like columns using keywords:
    \itemize{
      \item log, fold, pvalue, padj, mean, std, variance
      \item count, value, diff, change, ratio, score, rank
    }
  \item Removes non-numeric values from numeric columns
  \item Coerces columns to numeric type
  \item Identifies and removes extreme fold changes (|x| > 10)
  \item Provides interactive confirmation via shinyalert
}
}
\note{
- Case-insensitive column name matching
- Modifies data only with user confirmation
- Preserves original data if user cancels
- Alert cannot be dismissed without user action
- Returns original data frame if no cleaning needed

Column Detection Details:
\itemize{
  \item Keywords are applied using regex pattern matching
  \item Detection is performed before any data modification
  \item False positives are possible but rare due to keyword specificity
  \item Column detection results are logged for verification
  \item Users can review detected columns via the interactive alert
}

Common Edge Cases:
\itemize{
  \item Mixed numeric/character columns are flagged for cleaning
  \item Percentage values with '%' symbols are identified
  \item Currency values with symbols are detected
  \item Date-like numeric columns are typically excluded
  \item Special characters in column names are handled
}
}
\section{Alert Features}{

The function generates a styled HTML alert showing:
\itemize{
  \item Non-numeric value removal details
  \item Extreme value removal details
  \item Summary statistics (initial/final row counts)
  \item Warning note about data processing
  \item Options to proceed or cancel changes
}
}

\section{CSS Styling}{

The alert includes custom CSS classes:
\describe{
  \item{.cleaning-section}{Main content sections with blue border}
  \item{.summary-section}{Summary statistics with gray border}
  \item{.warning-note}{Warning message with yellow border}
  \item{code}{Inline code formatting}
}
}

\section{Logging Messages}{

The function generates several types of log messages:
\describe{
  \item{INFO}{Process steps and counts}
  \item{WARN}{Detection of suspicious values}
  \item{SUCCESS}{User acceptance of changes}
}
}

\section{Dependencies}{

Required packages:
\itemize{
  \item shinyalert: For interactive alerts
  \item htmltools: For HTML formatting
}

#' @section Numeric Column Detection:
The function uses a comprehensive keyword system to identify potentially numeric columns:

Primary Keywords (Statistical):
\describe{
  \item{log}{Identifies log-transformed data (e.g., log2_fc, log10_expr)}
  \item{fold}{Captures fold changes (e.g., fold_change, foldChange)}
  \item{pvalue}{Detects significance values (e.g., pvalue, p.value, pval)}
  \item{padj}{Finds adjusted p-values (e.g., padj, p_adjusted)}
}

Statistical Measures:
\describe{
  \item{mean}{Sample means and averages}
  \item{std}{Standard deviations}
  \item{variance}{Variance measurements}
}

Quantitative Measures:
\describe{
  \item{count}{Read counts or occurrence frequencies}
  \item{value}{Generic numeric values}
  \item{diff}{Differences or changes}
  \item{change}{Alternative to diff/fold}
  \item{ratio}{Proportions and ratios}
}

Ranking/Scoring:
\describe{
  \item{score}{Numerical scores or ratings}
  \item{rank}{Ranked values or positions}
}

Detection Process:
\enumerate{
  \item Column name matching:
    \itemize{
      \item Case-insensitive pattern matching
      \item Handles various separator styles (., _, -)
      \item Matches partial words (e.g., "log" matches "log2fc")
    }
  \item Content validation:
    \itemize{
      \item Checks if values can be coerced to numeric
      \item Identifies suspicious non-numeric entries
      \item Preserves NA values as valid missing data
    }
  \item Special cases:
    \itemize{
      \item Handles scientific notation (e.g., 1e-10)
      \item Recognizes common numeric strings ("-1.23")
      \item Identifies potentially misformatted numbers
    }
}

Example Column Matches:
```r
# Will be detected as numeric:
log2_fold_change
Log2FC
pvalue_adjusted
mean_expression
count_normalized
diff_score

# Won't be detected as numeric:
gene_name
sample_id
condition
```
}

\examples{
\dontrun{
# In Shiny server context
server <- function(input, output, session) {
  log_messages <- reactiveVal("")
  logger <- create_logger(session)
  structure_logger <- create_structure_logger(session)
  
  # Example data with issues
  df <- data.frame(
    gene = c("A", "B", "C", "D"),
    log2_fc = c(2, "NA", -1, 15),
    pvalue = c(0.01, "invalid", 0.05, 0.03),
    stringsAsFactors = FALSE
  )
  
  # Clean data
  cleaned_df <- diagnose_and_clean_data(
    df = df,
    log_messages_rv = log_messages,
    log_event = logger,
    log_structure = structure_logger
  )
}
}

}
\seealso{
\code{\link{create_logger}} for logging functionality
\code{\link{create_structure_logger}} for structure logging
\code{\link[shinyalert]{shinyalert}} for alert creation
}
\author{
Tomasz StÄ™pkowski <dzdzstepel@gmail.com>
}
