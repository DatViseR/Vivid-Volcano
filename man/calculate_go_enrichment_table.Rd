% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vivid_functions.R
\name{calculate_go_enrichment_table}
\alias{calculate_go_enrichment_table}
\title{Calculate GO Enrichment Tables}
\usage{
calculate_go_enrichment_table(
  df,
  annotation_col,
  go_categories,
  go_data,
  alpha,
  fold_col,
  log_messages_rv,
  log_event,
  log_structure
)
}
\arguments{
\item{df}{Data frame containing differential expression analysis results}

\item{annotation_col}{Character, name of the column containing gene annotations}

\item{go_categories}{Vector of GO category names to test for enrichment}

\item{go_data}{Data frame containing GO annotations with columns 'name', 'id', and 'gene'}

\item{alpha}{Numeric, significance threshold for adjusted p-values}

\item{fold_col}{Character, name of the column containing fold change values}

\item{log_messages_rv}{Reactive value for storing log messages}

\item{log_event}{Logging function created by create_logger()}

\item{log_structure}{Structure logging function created by create_structure_logger()}
}
\value{
A list containing three elements:
  \itemize{
    \item upregulated: List with 'data' containing GO enrichment results for upregulated genes
    \item downregulated: List with 'data' containing GO enrichment results for downregulated genes
    \item regulated: List with 'data' containing GO enrichment results for all regulated genes
  }
Each 'data' element is a data frame with columns:
  \itemize{
    \item GO_Category: Name of the GO category
    \item P_Value: Unadjusted p-value
    \item Adjusted_P_Value: Bonferroni-corrected p-value
    \item Population_Size: Total number of background genes
    \item Success_Population_Size: Number of genes in GO category
    \item Sample_Size: Number of input genes
    \item Sample_Success_Size: Number of matches
    \item id: GO term identifier
  }
}
\description{
Performs Gene Ontology (GO) enrichment analysis separately for 
upregulated, downregulated, and all regulated genes based on provided significance 
thresholds and fold change values. Includes comprehensive error handling and logging.
}
\details{
The function performs these steps:
1. Filters genes based on significance (alpha) and fold change direction
2. Performs separate GO enrichment analyses for each gene group
3. Handles cases with no regulated genes by returning empty data frames
4. Adds GO term identifiers to results
5. Implements comprehensive error handling and logging
}
\note{
The function assumes the presence of an 'adjusted_pvalues' column in the input
data frame. Empty results are handled gracefully with appropriate structure
and NA values.
}
\examples{
\dontrun{
# In Shiny server context
server <- function(input, output, session) {
  log_messages <- reactiveVal("")
  logger <- create_logger(session)
  structure_logger <- create_structure_logger(session)
  
  # Example input data
  df <- data.frame(
    gene = c("BRCA1", "TP53", "PTEN"),
    log2FC = c(2.1, -1.5, 1.8),
    adjusted_pvalues = c(0.01, 0.03, 0.02)
  )
  
  go_cats <- c("DNA repair", "cell cycle")
  go_data <- data.frame(
    name = c("DNA repair", "cell cycle"),
    id = c("GO:0006281", "GO:0007049"),
    gene = c("BRCA1", "TP53")
  )
  
  results <- calculate_go_enrichment_table(
    df = df,
    annotation_col = "gene",
    go_categories = go_cats,
    go_data = go_data,
    alpha = 0.05,
    fold_col = "log2FC",
    log_messages,
    logger,
    structure_logger
  )
}
}

}
\seealso{
\code{\link{calculate_go_enrichment}} for the core enrichment calculation
\code{\link{create_logger}} for logging functionality
\code{\link{create_structure_logger}} for structure logging
}
